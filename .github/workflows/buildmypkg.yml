name: Build n Release Synology Custom Packages

on:
    push:
        tags:
            - '*'
    workflow_dispatch:
    
jobs:
    build-spk:
        name: Build Package
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            max-parallel: 1
            matrix:
                dsm: ['7.2']
                arch: ['apollolake']
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Synology Package Builder Github Action
              uses: tomgrv/synology-package-builder@v1.3.0
              with:
                  dsm: ${{ matrix.dsm }}
                  arch: ${{ matrix.arch }}
                  projects: Changepanelsize:./mypkg/ChangePanelSize
                  output: ./dist

            - name: Ensure dist folder exists
              run: mkdir -p ./dist
            
            # 1. SPK 파일 내에서 package.tgz 추출, app 삽입, 재압축, spk 재생성
            - name: Insert app folder into package.tgz inside SPK
              run: |
                set -e
      
                for spk in ./dist/*.spk; do
                  # 임시 작업 디렉토리 사용
                  workdir=$(mktemp -d)
                  pkgdir=$(mktemp -d)
                  echo "Processing $spk..."
                  
                  # spk는 tar 파일이므로 풀기
                  tar -xvf "$spk" -C "$workdir"
      
                  # package.tgz를 풀기
                  tar -xvf "$workdir/package.tgz" -C "$pkgdir"
      
                  # app 폴더를 target 밑에 복사
                  mkdir -p "$pkgdir/target/app"
                  cp -r ./mypkg/ChangePanelSize/app/* "$pkgdir/target/app/"
      
                  # package.tgz 재압축
                  tar -czvf "$workdir/package.tgz" -C "$pkgdir" .
      
                  # 기존 spk의 package.tgz 교체 (spk 재패키징)
                  # spk에서 package.tgz만 교체 후 파일 재구성
                  (
                    cd "$workdir"
                    tar --remove-files -czvf "../${spk##*/}" *
                    ls -al ..
                    ls -al ./dist
                    mv "../${spk##*/}" "$spk"
                  )
      
                  # 정리
                  rm -rf "$workdir" "$pkgdir"
                done              
                  
            - name: Upload Package
              uses: actions/upload-artifact@v4
              with:
                  name: packages-${{ matrix.dsm }}-${{ matrix.arch }}
                  path: ./dist/*.spk

    create-release:
        name: Create Release
        runs-on: ubuntu-latest
        needs: build-spk
        if: startsWith(github.ref, 'refs/tags/')
        permissions:
            contents: write
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Download Package Artifact
              uses: actions/download-artifact@v4
              with:
                  path: ./dist
            - name: Create Release
              id: create_release
              uses: softprops/action-gh-release@v2
              with:
                  files: ./dist/*.spk
                  draft: false
                  prerelease: false
