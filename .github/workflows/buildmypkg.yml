name: Build n Release Synology Custom Packages

on:
    push:
        tags:
            - '*'
    workflow_dispatch:
    
jobs:
    build-spk:
        name: Build Package
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            max-parallel: 1
            matrix:
                dsm: ['7.2']
                arch: ['apollolake']
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Synology Package Builder Github Action
              uses: tomgrv/synology-package-builder@v1.3.0
              with:
                  dsm: ${{ matrix.dsm }}
                  arch: ${{ matrix.arch }}
                  projects: Changepanelsize:./mypkg/ChangePanelSize
                  output: ./dist
            
            - name: Insert app folder into package.tgz inside SPK
              run: |
                set -e
            
                for spk in ./dist/*.spk; do
                  # 절대 경로 저장
                  spk_abs=$(realpath "$spk")
                  dist_dir=$(dirname "$spk_abs")
            
                  # 임시 작업 디렉토리
                  workdir=$(mktemp -d)
                  pkgdir=$(mktemp -d)
                  echo "Processing $spk..."
            
                  ( # subshell
            
                    # 1. spk 풀기
                    tar -xvf "$spk_abs" -C "$workdir"
            
                    # 2. package.tgz 풀기
                    tar -xvf "$workdir/package.tgz" -C "$pkgdir"
            
                    # 3. app 복사
                    mkdir -p "$pkgdir/app"
                    cp -r ./mypkg/ChangePanelSize/app/* "$pkgdir/app/"
            
                    # 4. package.tgz 재압축
                    tar -czf "$workdir/package.tgz" -C "$pkgdir" .
            
                    # 5. 새 spk 생성: 임시 파일에 만들고 원본에 덮어쓰기
                    cd "$workdir"
                    tar -cvf "$spk_abs.tmp" *
                  )
            
                  # 안전하게 새 파일로 대체
                  mv "$spk_abs.tmp" "$spk_abs"
            
                  # 클린업
                  rm -rf "$workdir" "$pkgdir"
                done
                  
            - name: Upload Package
              uses: actions/upload-artifact@v4
              with:
                  name: packages-${{ matrix.dsm }}-${{ matrix.arch }}
                  path: ./dist/*.spk

    create-release:
        name: Create Release
        runs-on: ubuntu-latest
        needs: build-spk
        if: startsWith(github.ref, 'refs/tags/')
        permissions:
            contents: write
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Download Package Artifact
              uses: actions/download-artifact@v4
              with:
                  path: ./dist
            - name: Create Release
              id: create_release
              uses: softprops/action-gh-release@v2
              with:
                  files: ./dist/*.spk
                  draft: false
                  prerelease: false
