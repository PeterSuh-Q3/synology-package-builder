#!/bin/sh

# Ensure the script is run with the correct environment
if [ -z "$SYNOPKG_PKGDEST" ] || [ -z "$SYNOPKG_PKGCONF" ] || [ -z "$SYNOPKG_PKGNAME" ]; then
    echo "Package environment variables are not set."
    echo "This script must not be run directly, but as part of a Synology package."
    exit 1
fi

# Ensure the context is set
if [ ! -f "$PRESETS_FILE" ]; then
    echo "Presets file not found: $PRESETS_FILE"
    exit 1
fi

# loop through all .presets.docker objects in ressource file
# for each array objecy, give profile and image fields
jq -r '.docker[] | "\(.profile) \(.preload)"' "$PRESETS_FILE" | while read -r profile preload; do

    echo "Processing $SYNOPKG_PKGCONF/$profile"

    # Initialize variables
    export IMAGE_DOCKER=$(jq -r '.image' $SYNOPKG_PKGDEST/$profile)
    export IMAGE_NAME=$(jq -r '.name' $SYNOPKG_PKGDEST/$profile)
    export IMAGE_SIZE=$(jq -r '.size' $SYNOPKG_PKGDEST/$profile)
    export IMAGE_TAG=$(echo $IMAGE_DOCKER | cut -d':' -f2)
    export IMAGE_REPO=$(echo $IMAGE_DOCKER | cut -d':' -f1)
    export IMAGE_FILE="$SYNOPKG_PKGDEST/$preload"
    export IMAGE_PROFILE="$SYNOPKG_PKGDEST/docker/$IMAGE_NAME.profile"

    # Ensure the image profile exists with wizard substitutions
    if [ ! -f "$IMAGE_PROFILE" ]; then
        echo "Ensuring image profile exists: $IMAGE_PROFILE"
        $(dirname $0)/_substitute "$SYNOPKG_PKGDEST/$profile" "$IMAGE_PROFILE" "wizard"
    fi

    # ELevate privileges if necessary
    if $(dirname $0)/_elevate; then

        echo "Elevated privileges for $PRESETS_CONTEXT"

        if [ -x "$PRESETS_CONTEXT.docker" ]; then
            echo "Running preset $PRESETS_CONTEXT.docker with arguments: $@"
            $PRESETS_CONTEXT.docker "$@" || exit $?
        fi
    elif [ -z "$SYNOPKG_PKG_STATUS" ] || [ "$SYNOPKG_PKG_STATUS" = "START" ] || [ "$SYNOPKG_PKG_STATUS" = "STOP" ]; then
        exit 150
    fi

done
