#!/bin/bash

PKG_NAME=$(basename "$SYNOPKG_PKGDEST")
TARGET_DIR="/var/packages/$PKG_NAME/target"
BIN_DIR="$TARGET_DIR/bin"
VAR_DIR="/var/packages/$PKG_NAME/var"

echo "Post-installation starting for package: $PKG_NAME"
echo "Package destination: $SYNOPKG_PKGDEST"
echo "Target directory: $TARGET_DIR"

# 필요한 디렉터리 생성
mkdir -p "$VAR_DIR" || { echo "Failed to create VAR_DIR: $VAR_DIR"; exit 1; }
mkdir -p "$BIN_DIR" || { echo "Failed to create BIN_DIR: $BIN_DIR"; exit 1; }

# 로그 함수 (디렉터리가 생성된 후에 정의)
log_message() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" >> "$VAR_DIR/install.log" 2>/dev/null || echo "$1"
}

log_message "Post-installation started"

# 서비스 스크립트 복사 (패키지에 포함된 경우)
if [ -f "$SYNOPKG_PKGDEST/bin/change_panel_size.sh" ]; then
    cp "$SYNOPKG_PKGDEST/bin/change_panel_size.sh" "$BIN_DIR/" && \
    log_message "Copied change_panel_size.sh to $BIN_DIR/" || \
    log_message "Failed to copy change_panel_size.sh"
else
    log_message "Warning: change_panel_size.sh not found in package"
fi

if [ -f "$SYNOPKG_PKGDEST/bin/storagepanel.sh" ]; then
    cp "$SYNOPKG_PKGDEST/bin/storagepanel.sh" "$BIN_DIR/" && \
    log_message "Copied storagepanel.sh to $BIN_DIR/" || \
    log_message "Failed to copy storagepanel.sh"
else
    log_message "Warning: storagepanel.sh not found in package"
fi

# 심볼릭 링크 생성 (DSM 웹 인터페이스용)
if ln -sf /var/packages/$PKG_NAME/target/ui /usr/syno/synoman/webman/3rdparty/$PKG_NAME 2>/dev/null; then
    log_message "Created web interface symlink"
else
    log_message "Warning: Failed to create web interface symlink"
fi

# 서비스 스크립트들 권한 설정
chmod +x "$BIN_DIR/storagepanel.sh" 2>/dev/null && log_message "Set permissions for storagepanel.sh"
chmod +x "$BIN_DIR/change_panel_size.sh" 2>/dev/null && log_message "Set permissions for change_panel_size.sh"

# sudo 설정 확인 및 추가
SUDO_CONF="/etc/sudoers.d/changepanelsize"
log_message "Configuring sudo access for StorageManager commands..."

cat > "${SUDO_CONF}.tmp" << EOF
# Allow Changepanelsize package to run specific commands as StorageManager
Changepanelsize ALL=(StorageManager) NOPASSWD: /bin/bash /tmp/storagepanel_*/modify_script.sh
EOF

if ! visudo -c -f "${SUDO_CONF}.tmp" >/dev/null 2>&1; then
    log_message "ERROR: Invalid sudo configuration"
    rm -f "${SUDO_CONF}.tmp"
    exit 1
fi

mv "${SUDO_CONF}.tmp" "${SUDO_CONF}" && \
chmod 0440 "${SUDO_CONF}" && \
log_message "Successfully configured sudo access" || \
log_message "Failed to configure sudo access"

# StorageManager 파일 권한 설정
STORAGE_JS_PATH="/usr/local/packages/@appstore/StorageManager/ui/storage_panel.js"
STORAGE_GZ_PATH="${STORAGE_JS_PATH}.gz"

if [ -f "$STORAGE_JS_PATH" ]; then
    # StorageManager 그룹에 쓰기 권한 추가
    log_message "Current permissions for storage_panel.js: $(ls -l "$STORAGE_JS_PATH")"
    if setfacl -m "g:${PKG_NAME}:rw" "$STORAGE_JS_PATH" 2>/dev/null; then
        log_message "Added ACL permissions for ${PKG_NAME} group to storage_panel.js"
    else
        log_message "Warning: Failed to set ACL permissions for storage_panel.js"
    fi
    
    if [ -f "$STORAGE_GZ_PATH" ]; then
        if setfacl -m "g:${PKG_NAME}:rw" "$STORAGE_GZ_PATH" 2>/dev/null; then
            log_message "Added ACL permissions for ${PKG_NAME} group to storage_panel.js.gz"
        else
            log_message "Warning: Failed to set ACL permissions for storage_panel.js.gz"
        fi
    fi
fi

# 권한 설정 결과 확인
if [ -f "$STORAGE_JS_PATH" ]; then
    log_message "Final permissions for storage_panel.js: $(ls -l "$STORAGE_JS_PATH")"
    log_message "ACL permissions: $(getfacl -p "$STORAGE_JS_PATH" 2>/dev/null)"
fi

# 로그 파일 생성 및 권한 설정
touch "$VAR_DIR/change_panel_size.log" 2>/dev/null && \
chmod 644 "$VAR_DIR/change_panel_size.log" 2>/dev/null && \
log_message "Created and configured log file"

log_message "Post-installation completed successfully"
echo "Post-installation completed successfully"

exit 0
