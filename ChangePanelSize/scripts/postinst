#!/bin/bash

PKG_NAME=$(basename "$SYNOPKG_PKGDEST")
TARGET_DIR="/var/packages/$PKG_NAME/target"
BIN_DIR="$TARGET_DIR/bin"
VAR_DIR="/var/packages/$PKG_NAME/var"

echo "Post-installation starting for package: $PKG_NAME"
echo "Package destination: $SYNOPKG_PKGDEST"
echo "Target directory: $TARGET_DIR"

# 필요한 디렉터리 생성
mkdir -p "$VAR_DIR" || { echo "Failed to create VAR_DIR: $VAR_DIR"; }
mkdir -p "$BIN_DIR" || { echo "Failed to create BIN_DIR: $BIN_DIR"; }

# 로그 함수 (디렉터리가 생성된 후에 정의)
log_message() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" >> "$VAR_DIR/install.log" 2>/dev/null || echo "$1"
}

log_message "Post-installation started"

# 서비스 스크립트 복사 (패키지에 포함된 경우)
log_message "Looking for scripts in: $SYNOPKG_PKGDEST"
log_message "Contents of SYNOPKG_PKGDEST: $(ls -la "$SYNOPKG_PKGDEST" 2>/dev/null || echo 'Directory not accessible')"

# bin 디렉터리 확인
if [ -d "$SYNOPKG_PKGDEST/bin" ]; then
    log_message "Contents of bin directory: $(ls -la "$SYNOPKG_PKGDEST/bin" 2>/dev/null)"
else
    log_message "bin directory not found, checking if scripts are in root"
fi

# change_panel_size.sh 복사
SOURCE_CHANGE_PANEL="$SYNOPKG_PKGDEST/bin/change_panel_size.sh"
TARGET_CHANGE_PANEL="$BIN_DIR/change_panel_size.sh"

if [ -f "$SOURCE_CHANGE_PANEL" ]; then
    log_message "Attempting to copy $SOURCE_CHANGE_PANEL to $TARGET_CHANGE_PANEL"
    log_message "Source file permissions: $(ls -l "$SOURCE_CHANGE_PANEL")"
    log_message "Target directory permissions: $(ls -ld "$BIN_DIR")"
    
    # 복사 시도
    if cp "$SOURCE_CHANGE_PANEL" "$TARGET_CHANGE_PANEL" 2>/dev/null; then
        log_message "Successfully copied change_panel_size.sh"
        chmod +x "$TARGET_CHANGE_PANEL" 2>/dev/null
    else
        log_message "Direct copy failed, trying with cat"
        if cat "$SOURCE_CHANGE_PANEL" > "$TARGET_CHANGE_PANEL" 2>/dev/null; then
            log_message "Successfully copied change_panel_size.sh using cat"
            chmod +x "$TARGET_CHANGE_PANEL" 2>/dev/null
        else
            log_message "Failed to copy change_panel_size.sh - both cp and cat failed"
            log_message "Error details: $(cp "$SOURCE_CHANGE_PANEL" "$TARGET_CHANGE_PANEL" 2>&1)"
        fi
    fi
elif [ -f "$SYNOPKG_PKGDEST/change_panel_size.sh" ]; then
    SOURCE_CHANGE_PANEL="$SYNOPKG_PKGDEST/change_panel_size.sh"
    if cp "$SOURCE_CHANGE_PANEL" "$TARGET_CHANGE_PANEL" 2>/dev/null || cat "$SOURCE_CHANGE_PANEL" > "$TARGET_CHANGE_PANEL" 2>/dev/null; then
        log_message "Successfully copied change_panel_size.sh from root"
        chmod +x "$TARGET_CHANGE_PANEL" 2>/dev/null
    else
        log_message "Failed to copy change_panel_size.sh from root"
    fi
else
    log_message "Warning: change_panel_size.sh not found in package"
fi

# storagepanel.sh 복사
SOURCE_STORAGE_PANEL="$SYNOPKG_PKGDEST/bin/storagepanel.sh"
TARGET_STORAGE_PANEL="$BIN_DIR/storagepanel.sh"

if [ -f "$SOURCE_STORAGE_PANEL" ]; then
    log_message "Attempting to copy $SOURCE_STORAGE_PANEL to $TARGET_STORAGE_PANEL"
    log_message "Source file permissions: $(ls -l "$SOURCE_STORAGE_PANEL")"
    
    # 복사 시도
    if cp "$SOURCE_STORAGE_PANEL" "$TARGET_STORAGE_PANEL" 2>/dev/null; then
        log_message "Successfully copied storagepanel.sh"
        chmod +x "$TARGET_STORAGE_PANEL" 2>/dev/null
    else
        log_message "Direct copy failed, trying with cat"
        if cat "$SOURCE_STORAGE_PANEL" > "$TARGET_STORAGE_PANEL" 2>/dev/null; then
            log_message "Successfully copied storagepanel.sh using cat"
            chmod +x "$TARGET_STORAGE_PANEL" 2>/dev/null
        else
            log_message "Failed to copy storagepanel.sh - both cp and cat failed"
            log_message "Error details: $(cp "$SOURCE_STORAGE_PANEL" "$TARGET_STORAGE_PANEL" 2>&1)"
        fi
    fi
elif [ -f "$SYNOPKG_PKGDEST/storagepanel.sh" ]; then
    SOURCE_STORAGE_PANEL="$SYNOPKG_PKGDEST/storagepanel.sh"
    if cp "$SOURCE_STORAGE_PANEL" "$TARGET_STORAGE_PANEL" 2>/dev/null || cat "$SOURCE_STORAGE_PANEL" > "$TARGET_STORAGE_PANEL" 2>/dev/null; then
        log_message "Successfully copied storagepanel.sh from root"
        chmod +x "$TARGET_STORAGE_PANEL" 2>/dev/null
    else
        log_message "Failed to copy storagepanel.sh from root"
    fi
else
    log_message "Warning: storagepanel.sh not found in package"
fi

# 심볼릭 링크 생성 (DSM 웹 인터페이스용)
if ln -sf /var/packages/$PKG_NAME/target/ui /usr/syno/synoman/webman/3rdparty/$PKG_NAME 2>/dev/null; then
    log_message "Created web interface symlink"
else
    log_message "Warning: Failed to create web interface symlink"
fi

# 복사된 파일들의 권한 설정 확인
if [ -f "$BIN_DIR/storagepanel.sh" ]; then
    chmod +x "$BIN_DIR/storagepanel.sh" 2>/dev/null && log_message "Set permissions for storagepanel.sh"
else
    log_message "Warning: storagepanel.sh not found in target directory"
fi

if [ -f "$BIN_DIR/change_panel_size.sh" ]; then
    chmod +x "$BIN_DIR/change_panel_size.sh" 2>/dev/null && log_message "Set permissions for change_panel_size.sh"
else
    log_message "Warning: change_panel_size.sh not found in target directory"
fi

# sudo 설정 확인 및 추가 (선택사항)
SUDO_CONF="/etc/sudoers.d/changepanelsize"
log_message "Configuring sudo access for StorageManager commands..."

# sudoers.d 디렉터리가 존재하는지 확인
if [ ! -d "/etc/sudoers.d" ]; then
    log_message "Warning: /etc/sudoers.d directory does not exist, skipping sudo configuration"
else
    # 기존 설정 제거
    rm -f "${SUDO_CONF}" "${SUDO_CONF}.tmp"
    
    # 더 간단하고 안전한 sudo 설정
    cat > "${SUDO_CONF}.tmp" << 'SUDOEOF'
# Allow StorageManager group to modify storage panel files
%StorageManager ALL=(root) NOPASSWD: /bin/gzip, /bin/gunzip, /bin/sed
SUDOEOF

    # 생성된 파일 확인
    if [ -f "${SUDO_CONF}.tmp" ] && [ -s "${SUDO_CONF}.tmp" ]; then
        log_message "Sudo configuration file created successfully"
        
        # visudo가 있는지 확인하고 사용
        if command -v visudo >/dev/null 2>&1; then
            if visudo -c -f "${SUDO_CONF}.tmp" >/dev/null 2>&1; then
                mv "${SUDO_CONF}.tmp" "${SUDO_CONF}" && \
                chmod 0440 "${SUDO_CONF}" && \
                log_message "Successfully configured sudo access with validation"
            else
                log_message "Warning: sudo configuration validation failed, skipping"
                rm -f "${SUDO_CONF}.tmp"
            fi
        else
            # visudo가 없는 경우 기본 복사
            log_message "Warning: visudo not found, copying sudo configuration without validation"
            if mv "${SUDO_CONF}.tmp" "${SUDO_CONF}" 2>/dev/null; then
                chmod 0440 "${SUDO_CONF}" 2>/dev/null && \
                log_message "Configured sudo access (without validation)"
            else
                log_message "Warning: Failed to configure sudo access"
            fi
        fi
    else
        log_message "Warning: Failed to create sudo configuration file"
    fi
fi

# StorageManager 파일 권한 설정 (기본 권한만 설정)
STORAGE_JS_PATH="/usr/local/packages/@appstore/StorageManager/ui/storage_panel.js"
STORAGE_GZ_PATH="${STORAGE_JS_PATH}.gz"

# 파일이 존재하는 경우 권한 설정
if [ -f "$STORAGE_JS_PATH" ]; then
    log_message "Setting permissions for storage_panel.js"
    log_message "Current permissions: $(ls -l "$STORAGE_JS_PATH")"
    chmod 666 "$STORAGE_JS_PATH" 2>/dev/null && \
    log_message "Set permissions for storage_panel.js" || \
    log_message "Warning: Failed to set permissions for storage_panel.js"
fi

if [ -f "$STORAGE_GZ_PATH" ]; then
    log_message "Setting permissions for storage_panel.js.gz"
    log_message "Current permissions: $(ls -l "$STORAGE_GZ_PATH")"
    chmod 666 "$STORAGE_GZ_PATH" 2>/dev/null && \
    log_message "Set permissions for storage_panel.js.gz" || \
    log_message "Warning: Failed to set permissions for storage_panel.js.gz"
fi

# 로그 파일 생성 및 권한 설정
touch "$VAR_DIR/change_panel_size.log" 2>/dev/null && \
chmod 644 "$VAR_DIR/change_panel_size.log" 2>/dev/null && \
log_message "Created and configured log file"

log_message "Post-installation completed successfully"
echo "Post-installation completed successfully"

exit 0
